---
import Horse from './Horse.astro';

interface Props {
	title: string;
	subtitle?: string;
	showHorse?: boolean;
	condense?: boolean;
}

const { title, showHorse, condense, subtitle } = Astro.props;
---
<section class={`hero full-bleed ${showHorse ? 'showHorse' : ''} ${condense ? 'condense' : ''}`}>
	<section class="wrapper">
		<h1>{title}</h1>
		
		{
			subtitle && 
				<p class="subtitle">
					{ subtitle }
				</p>
		}
		{
			showHorse && 
				<div class="horse">
					<Horse />
				</div>
		}
		{
			!condense && 
				<svg viewBox="0 0 1200 213" fill="none" xmlns="http://www.w3.org/2000/svg" class="hill full-bleed" role="presentation">
					<path d="M-22 156.778L1138.07 0.284901C1139.45 0.0982206 1140.86 0.277011 1142.16 0.803493L1215 30.4569V213H-22V156.778Z" fill="currentColor"/>
				</svg>	
		}		
	</section>
</section>

<style>
	.hero {
		min-height: 75vh;
		position: relative;
		background-color: var(--palette-highlight);
		color: var(--palette-contrast);
		padding-top: var(--space-3xl);
		overflow: hidden;

		&.condense {
			min-height: 10vh;
			padding: var(--space-3xl) 0 var(--space-xl) 0;
		}

		h1 {
			font-size: var(--step-5);
			margin: 0;
			padding: 0;
		}

		.subtitle {
			font-size: var(--step-1);
			padding: var(--space-m) 0 0 320px;
			text-align: left;
			font-weight: 500;
		}

		&.showHorse {
			h1 {
				padding: var(--space-l) 0 0 0;
				text-align: center;
				@media (min-width: 768px) {
					padding: var(--space-xl) 0 0 320px;
					text-align: left;
				}
			}
			.subtitle {
				padding: var(--space-s) 0 0 0;
				text-align: center;
				@media (min-width: 768px) {
					padding: var(--space-s) 0 0 320px;
					text-align: left;
				}
			}
		}
	}

	.horse {
		position: absolute;
		bottom: 4vw;
		@media (min-width: 768px) {
			bottom: 5vw;
		}
	}

	.hill {
		position: absolute;
		bottom: -1px;
		left: 0;
		right: 0;
		color: var(--palette-dark);
	}
</style>